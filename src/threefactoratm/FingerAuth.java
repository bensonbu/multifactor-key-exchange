/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package threefactoratm;

import binarization.Util;
import frontend.WindowApp;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Point;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import matchingPoints.MatcherHelper;
import skeletonization.TemplatesMethod;
import specialPoints.CheckingHelper;
import static threefactoratm.Login.imageid;

/**
 *
 * @author AZURE
 */
public class FingerAuth extends javax.swing.JFrame {

    BufferedImage bufferedImage = null;
    String fingerImage = null;

    /**
     * Creates new form IrisAuth
     */
    public FingerAuth() {
        initComponents();
        jTextField1.setText(Login.name);
        jTextField2.setText(Login.acc);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        preview = new javax.swing.JLabel();

        setTitle("Biometric Finger");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Biometric Thumb Finger"));

        jLabel1.setText("Name          :");

        jLabel2.setText("Account No :");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Thumb Finger");

        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Authenticate");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton1))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1))
                            .addGap(20, 20, 20)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                                .addComponent(jTextField2)
                                .addComponent(preview, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(preview, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        FileInputStream fos = null;
        JFileChooser jf = new JFileChooser();
        int state = jf.showOpenDialog(this);
        if (state == JFileChooser.APPROVE_OPTION) {
            File file = jf.getSelectedFile();

            try {
                bufferedImage = ImageIO.read(file);

                //set icon preview
                Image aux = bufferedImage.getScaledInstance(preview.getWidth(), preview.getHeight(), 1);
                preview.setIcon(new ImageIcon(aux));

            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error", ex.toString(), JOptionPane.ERROR_MESSAGE);
            }

            jTextField3.setText(file.getAbsolutePath());
            fingerImage = file.getAbsolutePath();
        }

// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        String path = jTextField3.getText();
        if (!path.isEmpty()) {

            String username = Login.name;
            String matchname = Login.imgName;

            this.dispose();

            try {

                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/atm", "root", "root");
                Statement st = con.createStatement();
                Statement st2 = con.createStatement();

                ResultSet rs1;
                String usreid = imageid;
                String imgname = null;

                rs1 = st.executeQuery("select * from biometric where user_id='" + usreid + "'");

                if (rs1.next()) {

                    imgname = rs1.getString("finger_image");

                }

                String matchpath = "finger/" + imgname;

                File original_f = new File(matchpath);
                String firstImageName = original_f.getName();
                File original_f1 = new File(fingerImage);
                String secondImageName = original_f1.getName();

                //Binarization
                BufferedImage original = ImageIO.read(original_f);
                BufferedImage grayscale = Util.toGray(original);
                BufferedImage binarized = Util.binarize(grayscale);
                // Util.writeImage("src/Image7_bin1", binarized);

                BufferedImage binarized1 = Util.binarize(Util.toGray(ImageIO.read(original_f1)));

                //Skeletonization
                BufferedImage skeletonized = TemplatesMethod.makeSkeletonization(binarized);
                //  Util.writeImage("src/Image7_skelet", skeletonized);

                BufferedImage skeletonized1 = TemplatesMethod.makeSkeletonization(binarized1);

                //Special points
                CheckingHelper helper = new CheckingHelper(skeletonized);
                helper.pointsToClasses();
                java.util.Set<Point> endPoints = helper.getEndPoints();
                java.util.Set<Point> branchPoints = helper.getBranchPoints();

                CheckingHelper helper1 = new CheckingHelper(skeletonized1);
                helper1.pointsToClasses();

                java.util.Set<Point> endPoints2 = helper1.getEndPoints();
                java.util.Set<Point> branchPoints2 = helper1.getBranchPoints();

                //Matching points
                MatcherHelper matcherHelper = new MatcherHelper();
                int matchedPoints = matcherHelper.calculateMatchedPoints(endPoints, endPoints2)
                        + matcherHelper.calculateMatchedPoints(branchPoints, branchPoints2);
                double percents = matchedPoints * 100 / (endPoints.size() + branchPoints.size());

                if (percents > 95.0) {

                    java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                            new Preview(skeletonized).setVisible(true);
                        }
                    });

                    JOptionPane.showMessageDialog(this, username.toUpperCase() + " --> Finger Print Recognized");
                
                java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                            new BalAndWithDraw().setVisible(true);
                        }
                    });
                
                
                } else {
                    JOptionPane.showMessageDialog(this, username.toUpperCase() + "Finger Print Not Recognized");
                }

            } catch (Exception e) {
                e.printStackTrace();
            }

            //  GUI gui_View = new GUI();
            //  IrisRecog irg_Model = new IrisRecog(gui_View);
            // gui_View.setModel(irg_Model);
            // gui_View.newScanEye(username, path);
            // gui_View.matchIris(matchpath);
        }

// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JLabel preview;
    // End of variables declaration//GEN-END:variables
}
